# Executes a triton program with triton-san

#!/bin/bash
set -e

function usage {
  echo "Usage: triton-san <sanitizer type> <path to trtion program>."
  echo "<sanitizer type>:"
  echo "  \"asan\": to detect buffer overflows" 
  echo "  \"tsan\": to detect data races"
  echo ""
  echo "Example: triton-san asan ./my_triton_program.py"
}

ROOT="@ROOT@"
TRITON_SHARED_OPT_PATH="@TRITON_SHARED_OPT_PATH@"
VENV_PATH="@VENV_PATH@"
LLVM_INSTALL_DIR="@LLVM_INSTALL_DIR@"

if [ "$#" -eq 0 ]; then
    usage
    exit 1
fi

sanitizer_type=$1

if [ "$sanitizer_type" != "asan" ] && [ "$sanitizer_type" != "tsan" ]; then
    echo "Error: Unsupported <sanitizer type> $sanitizer_type."
    echo ""
    usage
    exit 1
fi

env_args=""

llvm_install_dir="${LLVM_INSTALL_DIR}"

# set up the virtual environment and LLVM
triton_shared_opt_path="${TRITON_SHARED_OPT_PATH}"

. "${VENV_PATH}/bin/activate"
export TRITON_SHARED_OPT_PATH="$triton_shared_opt_path"
export LLVM_BINARY_DIR="${LLVM_INSTALL_DIR}/bin"
export PATH="${LLVM_INSTALL_DIR}/bin:${PATH}"

if [ "${sanitizer_type}" = "asan" ]; then
    # find path to asan shared library
    asan_dir="$(find "$llvm_install_dir" -type f -name "libclang_rt.asan.so")"

    if [ -z "$asan_dir" ]; then
        echo "Error: unable to find libclang_rt.asan.so in $llvm_install_dir"
        exit 1
    fi

    count=$(echo "$asan_dir" | wc -l)

    if [ "$count" -gt 1 ]; then
        echo "Error: multiple libclang_rt.asan.so found in $llvm_install_dir"
        echo "$asan_dir"
        exit 1
    fi

    env_args="\
LD_PRELOAD=\"$asan_dir\" \
TRITON_ALWAYS_COMPILE=1 \
TRITON_SHARED_SANITIZER_TYPE=\"asan\" \
ASAN_OPTIONS=\"detect_leaks=0\""
    
    # shift command line arguments to the left by 1 to account for "asan"
    shift 1
elif [ "${sanitizer_type}" = "tsan" ]; then
    # find path to tsan shared library
    tsan_dir="$(find "$llvm_install_dir" -type f -name "libclang_rt.tsan.so")"

    if [ -z "$tsan_dir" ]; then
        echo "Error: unable to find libclang_rt.tsan.so in $llvm_install_dir"
        exit 1
    fi

    count=$(echo "$tsan_dir" | wc -l)

    if [ "$count" -gt 1 ]; then
        echo "Error: multiple libclang_rt.tsan.so found in $llvm_install_dir"
        echo "$tsan_dir"
        exit 1
    fi

    # find path to archer library
    archer_dir="$(find "$llvm_install_dir" -type f -name "libarcher.so")"

    if [ -z "$archer_dir" ]; then
        echo "Error: unable to find libarcher.so in $llvm_install_dir"
        exit 1
    fi

    count=$(echo "$archer_dir" | wc -l)

    if [ "$count" -gt 1 ]; then
        echo "Error: multiple libarcher.so found in $llvm_install_dir"
        echo "$archer_dir"
        exit 1
    fi
    
    SUPPRESSION_FILE="${ROOT}/tsan_suppression.txt"

    env_args="\
LD_PRELOAD=\"$tsan_dir\" \
TRITON_ALWAYS_COMPILE=1 \
TRITON_SHARED_SANITIZER_TYPE=\"tsan\" \
TSAN_OPTIONS=\"ignore_noninstrumented_modules=0:report_mutex_bugs=0:suppressions=${SUPPRESSION_FILE}\" \
OMP_NUM_THREADS=16 \
OMP_TOOL_LIBRARIES=\"$archer_dir\" \
ARCHER_OPTIONS=\"verbose=1\""

    # shift command line arguments to the left by 1 to account for "tsan"
    shift 1
fi

# invoke python function
echo "Running command: ${env_args} python $*"
eval "${env_args} python $*"
